<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Data Entry System</title>
    <link rel="stylesheet" href="forgetPassword.css" />
    <link rel="shortcut icon" href="./favicon.png" type="image/x-icon" />

    <link
      href="https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css"
      rel="stylesheet"
    />

    <script src="https://cdn.tailwindcss.com">
          tailwind.config = {
        darkMode: 'class',
        theme: {
          extend: {
            colors: {
              primary: {"50":"#eff6ff","100":"#dbeafe","200":"#bfdbfe","300":"#93c5fd","400":"#60a5fa","500":"#3b82f6","600":"#2563eb","700":"#1d4ed8","800":"#1e40af","900":"#1e3a8a"}
            }
          },
          fontFamily: {
            'body': [
          'Inter',
          'ui-sans-serif',
          'system-ui',
          '-apple-system',
          'system-ui',
          'Segoe UI',
          'Roboto',
          'Helvetica Neue',
          'Arial',
          'Noto Sans',
          'sans-serif',
          'Apple Color Emoji',
          'Segoe UI Emoji',
          'Segoe UI Symbol',
          'Noto Color Emoji'
        ],
            'sans': [
          'Inter',
          'ui-sans-serif',
          'system-ui',
          '-apple-system',
          'system-ui',
          'Segoe UI',
          'Roboto',
          'Helvetica Neue',
          'Arial',
          'Noto Sans',
          'sans-serif',
          'Apple Color Emoji',
          'Segoe UI Emoji',
          'Segoe UI Symbol',
          'Noto Color Emoji'
        ]
          }
        }
      }
    </script>
  </head>
  <body>
    <div class="main">
      <section class="bg-gray-50 dark:bg-gray-900">
        <div
          class="container flex flex-col items-center justify-center px-6 py-8 mx-auto md:h-screen lg:py-0"
        >
          <div
            style="background: linear-gradient(to right, #2c3e50, #4ca1af)"
            class="bg-blue-600 w-full p-6 rounded-lg shadow dark:border md:mt-0 sm:max-w-md dark:bg-gray-800 dark:border-gray-700 sm:p-8"
          >
            <h2
              class="mb-1 text-xl font-bold leading-tight tracking-tight text-gray-100 md:text-2xl dark:text-white"
            >
              Change Password
            </h2>
            <div
              class="mb-1 leading-tight tracking-tight text-gray-200 dark:text-white"
            >
              Your new password must be different from previous used passwords.
            </div>
            <form
              class="mt-4 space-y-4 lg:mt-5 md:space-y-5"
              id="resetPasswordForm"
            >
              <div>
                <label
                  for="email"
                  class="block mb-2 text-sm font-medium text-gray-300 dark:text-white"
                  >Your Email</label
                >
                <input
                  type="email"
                  name="email"
                  id="email"
                  class="bg-gray-50 border border-gray-300 text-gray-800 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                  placeholder="Enter your email"
                  required
                />
              </div>
              <div>
                <label
                  for="password"
                  class="block mb-2 text-sm font-medium text-gray-300 dark:text-white"
                  >New Password</label
                >
                <input
                  type="password"
                  name="password"
                  id="password"
                  placeholder="••••••••"
                  class="bg-gray-50 border border-gray-300 text-gray-800 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                  required
                />
              </div>
              <div>
                <label
                  for="confirm-password"
                  class="block mb-2 text-sm font-medium text-gray-300 dark:text-white"
                  >Confirm password</label
                >
                <input
                  type="password"
                  name="confirm-password"
                  id="confirm-password"
                  placeholder="••••••••"
                  class="bg-gray-50 border border-gray-300 text-gray-800 sm:text-sm rounded-lg focus:ring-primary-600 focus:border-primary-600 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                  required=""
                />
              </div>
              <p id="errorMsg"></p>
              <div class="flex items-start">
                <div class="flex items-center h-5">
                  <input
                    id="newsletter"
                    aria-describedby="newsletter"
                    type="checkbox"
                    class="w-4 h-4 border border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:bg-gray-700 dark:border-gray-600 dark:focus:ring-primary-600 dark:ring-offset-gray-800"
                    required
                  />
                </div>
                <div class="ml-3 text-sm">
                  <label
                    for="newsletter"
                    class="font-light text-gray-900 dark:text-gray-900"
                  >
                    <b>I accept the</b>
                    <i
                      class="font-medium text-gray-900 hover:underline dark:text-primary-500"
                      href="#"
                      >Terms and Conditions</i
                    ></label
                  >
                </div>
              </div>
              <button
                type="button"
                style="
                  background: linear-gradient(
                    to right,
                    #0f0c29,
                    #302b63,
                    #24243e
                  );
                "
                onclick="validate()"
                class="w-full text-white hover:bg-primary-700 focus:ring-4 focus:outline-none focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800"
              >
                <i class="fa fa-fw fa-refresh"></i>
                Reset Password
              </button>
              <!-- <button type="button" class="focus:outline-none text-white bg-green-700 hover:bg-green-800 focus:ring-4 focus:ring-green-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-green-600 dark:hover:bg-green-700 dark:focus:ring-green-800">Go Back</button> -->
              <!-- <button type="button" class="text-white bg-gray-800 hover:bg-gray-900 focus:outline-none focus:ring-4 focus:ring-gray-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-gray-800 dark:hover:bg-gray-700 dark:focus:ring-gray-700 dark:border-gray-700">Go Back</button> -->
            </form>
          </div>
        </div>
      </section>
    </div>

    <div id="otpHandlerDivision">
      <div class="otpHandlerModalContent">
        <div id="otpHandlerContentHolder">
          <div>Otp sent. Time left = <span id="timer"></span></div>
          <p style="font-size: larger; font-weight: 600">Enter OTP:</p>
          <input type="number" id="otpInput" autofocus />
          <p id="errorOtp"></p>
          <div class="confirm_btn_container">
            <button
              class="text-white bg-[#24292F] hover:bg-[#24292F]/90 focus:ring-4 focus:outline-none focus:ring-[#24292F]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-500 dark:hover:bg-[#050708]/30 mr-2 mb-2"
              onclick="changePassword()"
            >
              Change Password
            </button>
            <button
              class="text-white bg-[#24292F] hover:bg-[#24292F]/90 focus:ring-4 focus:outline-none focus:ring-[#24292F]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-500 dark:hover:bg-[#050708]/30 mr-2 mb-2"
              onclick="(() => document.getElementById('otpHandlerDivision').style.visibility='hidden')()"
            >
              Cancel
            </button>
          </div>
        </div>
      </div>
    </div>

    <div id="otpHandlerFinalPopup">
      <div class="otpHandlerFinalModalContent">
        <div id="otpHandlerFinalContentHolder">
          <p
            id="otpHandlerFinalMSG"
            style="font-size: larger; font-weight: 600"
          ></p>
          <button
            class="text-white bg-[#24292F] hover:bg-[#24292F]/90 focus:ring-4 focus:outline-none focus:ring-[#24292F]/50 font-medium rounded-lg text-sm px-5 py-2.5 text-center inline-flex items-center dark:focus:ring-gray-500 dark:hover:bg-[#050708]/30 mr-2 mb-2"
            onclick="(() => document.getElementById('homeForm').submit())()"
          >
            OK
          </button>
        </div>
      </div>
    </div>

    <form action="/" method="get" id="homeForm"></form>
    <form action="/" method="get" id="forgotPassword"></form>
    <script>
      let otpReceiver;
      function validate() {
        var resetPasswordForm = document.getElementById('resetPasswordForm');
        if (!resetPasswordForm.checkValidity()) {
          if (resetPasswordForm.reportValidity) {
            resetPasswordForm.reportValidity();
          } else {
            alert(msg.ieErrorForm);
          }
        } else {
          if (
            document.getElementById('password').value ==
            document.getElementById('confirm-password').value
          ) {
            verifyEmail();
          } else {
            document.getElementById('errorMsg').innerHTML =
              '⚠ Passwords do not match';

            setTimeout(() => {
              document.getElementById('errorMsg').innerHTML = '';
            }, 3000);
          }
        }
      }

      async function verifyEmail() {
        const email = document.getElementById('email').value;

        const response = await fetch('/emailVerification', {
          method: 'POST',
          headers: {
            'Content-type': 'application/json',
          },
          body: JSON.stringify({
            email,
          }),
        });

        const data = await response.json();

        if (data.status == 'success') {
          otpReceiver = data.otp;
          setTimeout(() => {
            otpReceiver = '';
          }, 120000);

          // otp timer function
          let timerOn = true;

          function timer(remaining) {
            var m = Math.floor(remaining / 60);
            var s = remaining % 60;

            m = m < 10 ? '0' + m : m;
            s = s < 10 ? '0' + s : s;
            document.getElementById('timer').innerHTML = m + ':' + s;
            remaining -= 1;

            if (remaining >= 0 && timerOn) {
              setTimeout(function () {
                timer(remaining);
              }, 1000);
              return;
            }

            // if (!timerOn) {
            //   // Do validate stuff here
            //   return;
            // }

            // Do timeout stuff here
            document.getElementById('errorOtp').innerHTML = '⚠ OTP expired';
            setTimeout(() => {
              document.getElementById('forgotPassword').submit();
            }, 2000);
          }

          timer(120);

          document.getElementById('otpHandlerDivision').style.visibility =
            'visible';
        } else {
          document.getElementById('errorMsg').innerHTML =
            '⚠ Email address not registered';

          setTimeout(() => {
            document.getElementById('errorMsg').innerHTML = '';
          }, 3000);
        }
      }

      async function changePassword() {
        const otpInput = document.getElementById('otpInput').value;
        const email = document.getElementById('email').value;
        const password = document.getElementById('password').value;

        if (otpInput == otpReceiver) {
          const response = await fetch('/resetPassword', {
            method: 'POST',
            headers: {
              'Content-type': 'application/json',
            },
            body: JSON.stringify({
              email,
              password,
            }),
          });

          if (response.status == 200) {
            document.getElementById('otpHandlerFinalMSG').innerHTML =
              'Password changed successfully!';
            document.getElementById('otpHandlerFinalPopup').style.visibility =
              'visible';
          } else if (response.status == 400) {
            document.getElementById('otpHandlerFinalMSG').innerHTML =
              'Problem in changing password. Try Again!';
            document.getElementById('otpHandlerFinalPopup').style.visibility =
              'visible';
          }
        } else {
          document.getElementById('errorOtp').innerHTML = '⚠ Invalid OTP';
          setTimeout(() => {
            document.getElementById('errorOtp').innerHTML = '';
          }, 3000);
        }
      }
    </script>
  </body>
</html>
